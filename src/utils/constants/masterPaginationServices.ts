import { services } from "utils/services";

const check = <T extends string>(
	collection: Record<T, keyof typeof services>
) => collection;

export const masterPaginationServices = check({

  country: "getAllCountry",
  city: "getAllCity",
  occupation: "getAllOccupation",
  patient: "getAllPatients",
  couple: "getAllCouple",
  admittedPatients: "getAllAdmittedPatients",
  wife: "getAllWife",
  bed: "getAllBed",
  medicalStaff: 'getAllMedicalStaff',
  appointmentType: 'getAllAppointmentType',
  leadSource: "getAllLeadSource",
  wifeWithPartner: "getAllWifeWithPartner",
  resourceSlotConfig: 'getAllResourceSlotConfig',
  clinic: "getAllClinic",
  province: "getAllProvince",
  surgeryType: "getAllSurgeryType",
  visitType: "getAllVisitType",
  donor: "getAllDonor",
  documentType: "getAllDocumentType",
  blockReason: "getAllBlockReason",
  cancelReason: "getAllCancelReason",
  department: "getAllDepartment",
  designation: "getAllDesignation",
  dressCode: "getAllDressCode",
  appointment: "getAllAppointment",
  bedStatus: "getAllBedStatus",
  employeeType: "getAllEmployeeType",
  gender: "getAllGender",
  sponsor: "getAllSponsor",
  bedWithAdmission: "getAllBedWithAdmission",
  language: "getAllLanguage",
  locality: "getAllLocality",
  zipCode: "getAllLocality",
  maritalStatus: "getAllMaritalStatus",
  nationality: "getAllNationality",
  paymentMode: "getAllPaymentMode",
  paymentType: "getAllPaymentType",
  qualification: "getAllQualification",
  referringDoctor: "getAllReferringDoctor",
  religion: "getAllReligion",
  skinColor: "getAllSkinColor",
  title: "getAllTitle",
  vipReason: "getAllVipReason",
  visaStatus: "getAllVisaStatus",
  station: "getAllStation",
  doctorSlotBlock: "getAllDoctorSlotBlock",
  role: "getAllRole",
  blockType: "getAllBlockType",
  contactType: "getAllContactType",
  resource: "getAllResource",
  rescheduleReason: "getAllRescheduleReason",
  resourceSlotAppointmentConfig: "getResourceSlotAppointmentConfig",
  clinicalComplicationType: "getAllClinicalComplicationType",
  employeeCategory: "getAllEmployeeCategory",
  surgery: "getAllSurgery",
  appointmentDoctorSlotBlock: "getAllAppointmentDoctorSlotBlock",
  appointmentByDate: 'getAppointmentByDate',
  series: 'getAllSeries',
  equipment: 'getAllEquipment',
  user: "getAllUser",
  otSlotConfig: "getAllOTSlotConfig",
  otSlotBlock: "getAllOTSlotBlock",
  sample: "getAllSample",
  unitOfMeasure: "getAllUnitOfMeasure",
  sampleContainer: "getAllSampleContainer",
  profile: "getAllProfile",
  patientForAdmissionSearch: "getAllPatientForAdmissionSearch",
  test: "getAllTest",
  discountType: "getAllDiscountType",
  bankDetail: "getAllBankDetail",
  doctorFee: "getAllDoctorFee",
  facilitator: "getAllFacilitator",
  merchant: "getAllMerchant",
  otSlotAppointmentConfig: "getOTSlotAppointmentConfig",
  otAppointmentByDate: 'getOTAppointmentByDate',
  appointmentOTSlotBlock: 'getAllAppointmentOTSlotBlock',
  service: 'getAllService',
  sampleStatus: 'getAllSampleStatus',
  resultTemplate: 'getAllResultTemplate',
  component: 'getAllComponent',
  package: 'getAllPackage',
  emiScheme: 'getAllEmiScheme',
  resultValue: 'getAllResultValue',
  location: 'getAllLocation',
  tariff: 'getAllTariff',
  tariffItem: 'getAllTariffItem',
  discountAuthorityMatrix: 'getAllDiscountAuthorityMatrix',
  refundDepositLogic: 'getAllRefundDepositLogic',
  serviceCategory: 'getAllServiceCategory',
  stage: 'getAllStage',
  cycle: 'getAllCycle',
  discountReason: 'getAllDiscountReason',
  subDepartment: 'getAllSubDepartment',
  genderApplicability: 'getAllGenderApplicability',
  transactionType: 'getAllTransactionType',
  insuranceCompany: "getAllInsuranceCompany",
  bedBlockReason: "getAllBedBlockReason",
  speciality: "getAllSpeciality",
  resourceAppointment: "getAllResourceAppointment",
  testOrder: "getAllTestOrder",
  testOrderDispatch: "getAllTestOrderDispatch",
  testOrderAcknowledge: "getAllTestOrderAcknowledge",
  taskReason: "getAllTaskReason",
  bills: "getAllBills",
  zipCodeLookup: "GetZipCodeLookup",
  packageBill: "getPackageBill",
  priority: "getAllPriority",
  consultationReason: "getAllConsultationReason",
  dysmenorrhea: "getAllDysmenorrhea",
  coupleConsanguinity: "getAllCoupleConsanguinity",
  contraceptiveMethod: "getAllContraceptiveMethod",
  translator: "getAllTranslator",
  surgicalHistory: "getAllSurgicalHistory",
  surgeryIndication: "getAllSurgeryIndication",
  surgeryTechnique: "getAllSurgeryTechnique",
  surgicalHistorySurgeryType: "getAllSurgicalHistorySurgeryType",
  disorder: "getAllDisorder",
  disorderCategory: "getAllDisorderCategory",
  takingBloodThinner: "getAllTakingBloodThinner",
  drug: "getAllDrug",
  medicationFrequency: "getAllMedicationFrequency",
  medicationRoute: "getAllMedicationRoute",
  drugAllergy: "getAllDrugAllergy",
  calendarYear: "getAllCalendarYear",
  pregnancyEndingType: "getAllPregnancyEndingType",
  gestationType: "getAllGestationType",
  operatingTheatreRoom: "getOperatingTheatreRoom",
  OPDepositRefundList: "getOPDepositRefundList",
  OPBillingRefundList: "getOPBillingRefundList",
  inPatientPackageCancellationList: "getInPatientPackageCancellationList",
  hirsutism: "getAllHirsutism",
  galactorrhea: "getAllGalactorrhea",
  vagina: "getAllVagina",
  cervixPathological: "getAllCervixPathological",
  treatmentType: "getAllTreatmentType",
  protocol: "getAllProtocol",
  pregnancyResult: "getAllPregnancyResult",
  cycleComplication: "getAllCycleComplication",
  ultrasoundType: "getAllUltrasoundType",
  ultrasoundMethod: "getAllUltrasoundMethod",
  raceType: "getAllRaceType",
  hairType: "getAllHairType",
  hairColor: "getAllHairColor",
  eyeColor: "getAllEyeColor",
  uterineCavity: "getAllUterineCavity",
  fallopianTubeStatus: "getAllFallopianTubeStatus",
  transferredQality: "getAllTransferredQuality",
  malformation: "getAllMalformation",
  myomaType: "getAllMyomaType",
  myomaLocation: "getAllMyomaLocation",
  myomaHeight: "getAllMyomaHeight",
  appearance: "getAllAppearance",
  adenomyosisLocation: "getAllAdenomyosisLocation",
  adenomyosisHeight: "getAllAdenomyosisHeight",
  endometrialPolypAppearance: "getAllEndometrialPolypAppearance",
  endometrialPolypHeight: "getAllEndometrialPolypHeight",
  endometrialAppearance: "getAllEndometrialAppearance",
  endometrialEcogenity: "getAllEndometrialEcogenity",
  endometrialLiquid: "getAllEndometrialLiquid",
  ultrasoundAttachedLocation: "getAllUltrasoundAttachedLocation",
  ultrasoundEssure: "getAllUltrasoundEssure",
  cervicalPathology: "getAllCervicalPathology",
  puerperalPathology: "getAllPuerperalPathology",
  obstetricPathology: "getAllObstetricPathology",
  deliveryMode: "getAllDeliveryMode",
  treatmentIndication: 'getAllTreatmentIndication',
  treatmentDiagnosis: 'getAllTreatmentDiagnosis',
  "treatmentProcess": "getAllTreatmentProcess",
  "userAssignedTask": "getUserAssignedTask",
  "refundApprovalList": "getALLRefundApprovalList",
  abnormality: "getAllAbnormality",
  pathalogical: "getAllPathalogical",
  complimentaryTestDetail: "getAllComplimentaryTestDetail",
  ultrasoundAttachedType: "getAllUltrasoundAttachedType",
  ultrasoundAttachedContent: "getAllUltrasoundAttachedContent",
  ultrasoundAttachedImpDiagnosis: "getAllUltrasoundAttachedImpDiagnosis",
  ultrasoundSummary: "getPatientUltrasoundSummary",
  diagnosisProcess: "getAllDiagnosis",
  allClinicMedicalStaff: "getAllClinicMedicalStaff",
  batchStore: "getAllBatchStore",
  kitTemplate: "getAllKITTemplate",
  painLocation: "getAllPainLocation",
  painFrquency: "getAllPainFrequency",
  painDescription: "getAllPainDescription",
  covidVaccination: "getAllCovidVaccination",
  vitalProcess: "getAllVital",
  prescriptionProcess: "getAllPrescriptionProcess",
  drugBatchStore: "getAllDrugBatchStore",
  consumableBatchStore: "getAllConsumableBatchStore",
  patientBloodLabSummary: "getPatientBloodLabSummary",
  refundReason: "getAllRefundReason",
  currency: "getAllCurrency",
  icd10CodeDiagnosis: "getAllIcd10CodeDiagnosis",
  IVFLabAndrologyLabRequest:"getAllIVFLabAndrologyLabRequest",
  diagnosticCode: "getAllDiagnosisCode",
  encounterTypeCode: "getAllEncounterTypesCode",
  encounterStartType: "getAllEncounterStartTypes",
  encounterEndType: "getAllEncounterEndTypes",
  serviceCategoryType: "getAllServiceCategoryType",
	itemCharge: "getItemCharge",
	clinicalDocumentType: "getAllClinicalDocumentType",
	clinicalDocumentUpload: "getDocumentUpload",
});
